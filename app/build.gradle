apply plugin: 'com.android.application'

//apply plugin: 'kotlin-android'

//apply plugin: 'kotlin-android-extensions'

apply plugin: 'com.zhaofan.testplugin'


testCodePlugin {
    name 'i`m test extension!!!'
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.0"
    defaultConfig {
        applicationId "com.zhaofan.gradledemo"
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
//    implementation project('app:buildSrc')
}

task dumpVersion {
    doLast {
        def versionPropsFile = file('version.properties')
        def properties = new Properties()
        properties.load(new FileInputStream(versionPropsFile))
        def properVersionCode = proper['VERSION_CODE'].toInteger() + 1
        proper['VERSION_CODE'] = properVersionCode.toString()
        proper.store(versionPropsFile.newWriter(), null)
    }
}

task notifyAllBump(dependsOn: dumpVersion) {
    doLast {
        print("Bump!!!")
    }
}


//class TestCodePlugin implements Plugin<Project>{
//
//    @Override
//    void apply(Project target) {
//        //执行的内容
//        println('hello plugin!!!')
//        def extension = target.extensions.create('testCodePlugin',TestExtension)
//        target.afterEvaluate {
//            println("$extension.name")
//        }
//    }
//}
//
//class TestExtension{
//    String name = "i`m test extension"
//}
//
//apply plugin: TestCodePlugin
//
//testCodePlugin{
//    name "i`m modify test extension"
//}
